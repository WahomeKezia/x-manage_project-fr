// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5h3QhDqWM84XV2vDpdccG7
// Component: -Xc5HLKeCM
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_x_manage_project.module.css"; // plasmic-import: 5h3QhDqWM84XV2vDpdccG7/projectcss
import sty from "./PlasmicDashboard.module.css"; // plasmic-import: -Xc5HLKeCM/css
import Rectangle7Icon from "./icons/PlasmicIcon__Rectangle7"; // plasmic-import: mM3LZX6jH7O/icon
import Arrow1Icon from "./icons/PlasmicIcon__Arrow1"; // plasmic-import: bei6iQA9x/icon

export const PlasmicDashboard__VariantProps = new Array();

export const PlasmicDashboard__ArgProps = new Array();

function PlasmicDashboard__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"desktop2"}
            data-plasmic-override={overrides.desktop2}
            className={classNames(projectcss.all, sty.desktop2)}
          >
            <Rectangle7Icon
              className={classNames(projectcss.all, sty.svg___9Jh9R)}
              role={"img"}
            />

            <div
              data-plasmic-name={"rectangle15"}
              data-plasmic-override={overrides.rectangle15}
              className={classNames(projectcss.all, sty.rectangle15)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___8ItgX
              )}
            >
              {"Username"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__m6ZXg
              )}
            >
              {"Add a project"}
            </div>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__wIp22
              )}
              href={`/expensespage`}
            >
              {"Expenses"}
            </a>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kr1AX
              )}
            >
              {"Dashboard"}
            </div>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__zIdPb
              )}
              href={`/projectspage`}
            >
              {"Projects"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__jgwR2
              )}
              href={`/toolspage`}
            >
              {"Tools"}
            </a>

            <div
              data-plasmic-name={"rectangle8"}
              data-plasmic-override={overrides.rectangle8}
              className={classNames(projectcss.all, sty.rectangle8)}
            />

            <div
              data-plasmic-name={"rectangle18"}
              data-plasmic-override={overrides.rectangle18}
              className={classNames(projectcss.all, sty.rectangle18)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__chYez
              )}
            >
              {"Project Name"}
            </div>

            <div
              data-plasmic-name={"rectangle17"}
              data-plasmic-override={overrides.rectangle17}
              className={classNames(projectcss.all, sty.rectangle17)}
            />

            <div
              data-plasmic-name={"rectangle16"}
              data-plasmic-override={overrides.rectangle16}
              className={classNames(projectcss.all, sty.rectangle16)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oInVy
              )}
            >
              {"Project Name"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rsXpj
              )}
            >
              {"Responsable: Adama"}
            </div>

            <div
              data-plasmic-name={"_4Expenses"}
              data-plasmic-override={overrides._4Expenses}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4Expenses
              )}
            >
              {" 4 Expenses "}
            </div>

            <div
              data-plasmic-name={"_4UsedTools"}
              data-plasmic-override={overrides._4UsedTools}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4UsedTools
              )}
            >
              {" 4  Used Tools"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___67JYg
              )}
            >
              {"Project Name"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nrDtO
              )}
            >
              {"Project Name"}
            </div>

            <div
              data-plasmic-name={"rectangle19"}
              data-plasmic-override={overrides.rectangle19}
              className={classNames(projectcss.all, sty.rectangle19)}
            />

            <div
              data-plasmic-name={"rectangle20"}
              data-plasmic-override={overrides.rectangle20}
              className={classNames(projectcss.all, sty.rectangle20)}
            />

            <div
              data-plasmic-name={"rectangle21"}
              data-plasmic-override={overrides.rectangle21}
              className={classNames(projectcss.all, sty.rectangle21)}
            />

            <div
              data-plasmic-name={"rectangle22"}
              data-plasmic-override={overrides.rectangle22}
              className={classNames(projectcss.all, sty.rectangle22)}
            />

            <div
              data-plasmic-name={"cost"}
              data-plasmic-override={overrides.cost}
              className={classNames(projectcss.all, sty.cost)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jtHOh
              )}
            >
              {""}
            </div>

            <div
              data-plasmic-name={"plus"}
              data-plasmic-override={overrides.plus}
              className={classNames(projectcss.all, sty.plus)}
            />

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__tmuy
              )}
              href={`/`}
            >
              {"Log out"}
            </a>

            <div
              data-plasmic-name={"logout"}
              data-plasmic-override={overrides.logout}
              className={classNames(projectcss.all, sty.logout)}
            />

            <Arrow1Icon
              className={classNames(projectcss.all, sty.svg__yyCb)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__tt5Ob
              )}
            >
              {"Responsable: Adama"}
            </div>

            <div
              data-plasmic-name={"speed"}
              data-plasmic-override={overrides.speed}
              className={classNames(projectcss.all, sty.speed)}
            />

            <div
              data-plasmic-name={"project"}
              data-plasmic-override={overrides.project}
              className={classNames(projectcss.all, sty.project)}
            />

            <div
              data-plasmic-name={"cost2"}
              data-plasmic-override={overrides.cost2}
              className={classNames(projectcss.all, sty.cost2)}
            />

            <div
              data-plasmic-name={"user"}
              data-plasmic-override={overrides.user}
              className={classNames(projectcss.all, sty.user)}
            />

            <a
              data-plasmic-name={"fullToolStorageBox"}
              data-plasmic-override={overrides.fullToolStorageBox}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.fullToolStorageBox
              )}
              href={`/toolspage`}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___8Ld38
              )}
            >
              {"Responsable: Adama"}
            </div>

            <div
              data-plasmic-name={"fullToolStorageBox2"}
              data-plasmic-override={overrides.fullToolStorageBox2}
              className={classNames(projectcss.all, sty.fullToolStorageBox2)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6H50K
              )}
            >
              {"Responsable: Adama"}
            </div>

            <div
              data-plasmic-name={"_4Expenses2"}
              data-plasmic-override={overrides._4Expenses2}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4Expenses2
              )}
            >
              {" 4 Expenses "}
            </div>

            <div
              data-plasmic-name={"_4UsedTools2"}
              data-plasmic-override={overrides._4UsedTools2}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4UsedTools2
              )}
            >
              {" 4  Used Tools"}
            </div>

            <div
              data-plasmic-name={"cost3"}
              data-plasmic-override={overrides.cost3}
              className={classNames(projectcss.all, sty.cost3)}
            />

            <div
              data-plasmic-name={"fullToolStorageBox3"}
              data-plasmic-override={overrides.fullToolStorageBox3}
              className={classNames(projectcss.all, sty.fullToolStorageBox3)}
            />

            <div
              data-plasmic-name={"_4Expenses3"}
              data-plasmic-override={overrides._4Expenses3}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4Expenses3
              )}
            >
              {" 4 Expenses "}
            </div>

            <div
              data-plasmic-name={"_4UsedTools3"}
              data-plasmic-override={overrides._4UsedTools3}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4UsedTools3
              )}
            >
              {" 4  Used Tools"}
            </div>

            <div
              data-plasmic-name={"cost4"}
              data-plasmic-override={overrides.cost4}
              className={classNames(projectcss.all, sty.cost4)}
            />

            <div
              data-plasmic-name={"fullToolStorageBox4"}
              data-plasmic-override={overrides.fullToolStorageBox4}
              className={classNames(projectcss.all, sty.fullToolStorageBox4)}
            />

            <div
              data-plasmic-name={"_4Expenses4"}
              data-plasmic-override={overrides._4Expenses4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4Expenses4
              )}
            >
              {" 4 Expenses "}
            </div>

            <div
              data-plasmic-name={"_4UsedTools4"}
              data-plasmic-override={overrides._4UsedTools4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty._4UsedTools4
              )}
            >
              {" 4  Used Tools"}
            </div>

            <div
              data-plasmic-name={"fullToolStorageBox5"}
              data-plasmic-override={overrides.fullToolStorageBox5}
              className={classNames(projectcss.all, sty.fullToolStorageBox5)}
            />

            <div
              data-plasmic-name={"cost5"}
              data-plasmic-override={overrides.cost5}
              className={classNames(projectcss.all, sty.cost5)}
            />

            <div
              data-plasmic-name={"rectangle29"}
              data-plasmic-override={overrides.rectangle29}
              className={classNames(projectcss.all, sty.rectangle29)}
            />

            <div
              data-plasmic-name={"search"}
              data-plasmic-override={overrides.search}
              className={classNames(projectcss.all, sty.search)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vmu58
              )}
            >
              {"Chercher"}
            </div>

            <div
              data-plasmic-name={"rectangle30"}
              data-plasmic-override={overrides.rectangle30}
              className={classNames(projectcss.all, sty.rectangle30)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eaEx
              )}
            >
              {"Search"}
            </div>

            <div
              data-plasmic-name={"search2"}
              data-plasmic-override={overrides.search2}
              className={classNames(projectcss.all, sty.search2)}
            />

            <div
              data-plasmic-name={"rectangle64"}
              data-plasmic-override={overrides.rectangle64}
              className={classNames(projectcss.all, sty.rectangle64)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wXHvc
              )}
            >
              {"Company Logo"}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "desktop2",
    "rectangle15",
    "rectangle8",
    "rectangle18",
    "rectangle17",
    "rectangle16",
    "_4Expenses",
    "_4UsedTools",
    "rectangle19",
    "rectangle20",
    "rectangle21",
    "rectangle22",
    "cost",
    "plus",
    "logout",
    "speed",
    "project",
    "cost2",
    "user",
    "fullToolStorageBox",
    "fullToolStorageBox2",
    "_4Expenses2",
    "_4UsedTools2",
    "cost3",
    "fullToolStorageBox3",
    "_4Expenses3",
    "_4UsedTools3",
    "cost4",
    "fullToolStorageBox4",
    "_4Expenses4",
    "_4UsedTools4",
    "fullToolStorageBox5",
    "cost5",
    "rectangle29",
    "search",
    "rectangle30",
    "search2",
    "rectangle64"
  ],

  desktop2: [
    "desktop2",
    "rectangle15",
    "rectangle8",
    "rectangle18",
    "rectangle17",
    "rectangle16",
    "_4Expenses",
    "_4UsedTools",
    "rectangle19",
    "rectangle20",
    "rectangle21",
    "rectangle22",
    "cost",
    "plus",
    "logout",
    "speed",
    "project",
    "cost2",
    "user",
    "fullToolStorageBox",
    "fullToolStorageBox2",
    "_4Expenses2",
    "_4UsedTools2",
    "cost3",
    "fullToolStorageBox3",
    "_4Expenses3",
    "_4UsedTools3",
    "cost4",
    "fullToolStorageBox4",
    "_4Expenses4",
    "_4UsedTools4",
    "fullToolStorageBox5",
    "cost5",
    "rectangle29",
    "search",
    "rectangle30",
    "search2",
    "rectangle64"
  ],

  rectangle15: ["rectangle15"],
  rectangle8: ["rectangle8"],
  rectangle18: ["rectangle18"],
  rectangle17: ["rectangle17"],
  rectangle16: ["rectangle16"],
  _4Expenses: ["_4Expenses"],
  _4UsedTools: ["_4UsedTools"],
  rectangle19: ["rectangle19"],
  rectangle20: ["rectangle20"],
  rectangle21: ["rectangle21"],
  rectangle22: ["rectangle22"],
  cost: ["cost"],
  plus: ["plus"],
  logout: ["logout"],
  speed: ["speed"],
  project: ["project"],
  cost2: ["cost2"],
  user: ["user"],
  fullToolStorageBox: ["fullToolStorageBox"],
  fullToolStorageBox2: ["fullToolStorageBox2"],
  _4Expenses2: ["_4Expenses2"],
  _4UsedTools2: ["_4UsedTools2"],
  cost3: ["cost3"],
  fullToolStorageBox3: ["fullToolStorageBox3"],
  _4Expenses3: ["_4Expenses3"],
  _4UsedTools3: ["_4UsedTools3"],
  cost4: ["cost4"],
  fullToolStorageBox4: ["fullToolStorageBox4"],
  _4Expenses4: ["_4Expenses4"],
  _4UsedTools4: ["_4UsedTools4"],
  fullToolStorageBox5: ["fullToolStorageBox5"],
  cost5: ["cost5"],
  rectangle29: ["rectangle29"],
  search: ["search"],
  rectangle30: ["rectangle30"],
  search2: ["search2"],
  rectangle64: ["rectangle64"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDashboard__ArgProps,
          internalVariantPropNames: PlasmicDashboard__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDashboard";
  } else {
    func.displayName = `PlasmicDashboard.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboard = Object.assign(
  // Top-level PlasmicDashboard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    desktop2: makeNodeComponent("desktop2"),
    rectangle15: makeNodeComponent("rectangle15"),
    rectangle8: makeNodeComponent("rectangle8"),
    rectangle18: makeNodeComponent("rectangle18"),
    rectangle17: makeNodeComponent("rectangle17"),
    rectangle16: makeNodeComponent("rectangle16"),
    _4Expenses: makeNodeComponent("_4Expenses"),
    _4UsedTools: makeNodeComponent("_4UsedTools"),
    rectangle19: makeNodeComponent("rectangle19"),
    rectangle20: makeNodeComponent("rectangle20"),
    rectangle21: makeNodeComponent("rectangle21"),
    rectangle22: makeNodeComponent("rectangle22"),
    cost: makeNodeComponent("cost"),
    plus: makeNodeComponent("plus"),
    logout: makeNodeComponent("logout"),
    speed: makeNodeComponent("speed"),
    project: makeNodeComponent("project"),
    cost2: makeNodeComponent("cost2"),
    user: makeNodeComponent("user"),
    fullToolStorageBox: makeNodeComponent("fullToolStorageBox"),
    fullToolStorageBox2: makeNodeComponent("fullToolStorageBox2"),
    _4Expenses2: makeNodeComponent("_4Expenses2"),
    _4UsedTools2: makeNodeComponent("_4UsedTools2"),
    cost3: makeNodeComponent("cost3"),
    fullToolStorageBox3: makeNodeComponent("fullToolStorageBox3"),
    _4Expenses3: makeNodeComponent("_4Expenses3"),
    _4UsedTools3: makeNodeComponent("_4UsedTools3"),
    cost4: makeNodeComponent("cost4"),
    fullToolStorageBox4: makeNodeComponent("fullToolStorageBox4"),
    _4Expenses4: makeNodeComponent("_4Expenses4"),
    _4UsedTools4: makeNodeComponent("_4UsedTools4"),
    fullToolStorageBox5: makeNodeComponent("fullToolStorageBox5"),
    cost5: makeNodeComponent("cost5"),
    rectangle29: makeNodeComponent("rectangle29"),
    search: makeNodeComponent("search"),
    rectangle30: makeNodeComponent("rectangle30"),
    search2: makeNodeComponent("search2"),
    rectangle64: makeNodeComponent("rectangle64"),
    // Metadata about props expected for PlasmicDashboard
    internalVariantProps: PlasmicDashboard__VariantProps,
    internalArgProps: PlasmicDashboard__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDashboard;
/* prettier-ignore-end */
